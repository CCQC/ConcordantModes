import os
import shutil
import numpy as np
from concordantmodes.ted import TED
from numpy.linalg import inv
from numpy import linalg as LA

from suite_execute import execute_suite

from concordantmodes.options import Options
from concordantmodes.s_vectors import SVectors
from concordantmodes.zmat import Zmat

suite = execute_suite("./ref_data/s_vec_test/", "Custom", s_vec_bool=True)
suite.run()

# B-tensor ran on INTDER
B_ref_INTDER = [
    -0.9985411814,
    -0.0539954540,
    0.0000000186,
    0.9985411814,
    0.0539954540,
    -0.0000000186,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.3415577087,
    -0.9398608036,
    0.0000390060,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    -0.3415577087,
    0.9398608036,
    -0.0000390060,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.3547641089,
    0.4616317820,
    -0.8130427571,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    -0.3547641089,
    -0.4616317820,
    0.8130427571,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.3547607114,
    0.4616952226,
    0.8130082159,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    -0.3547607114,
    -0.4616952226,
    -0.8130082159,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    -0.3503184562,
    0.9366306525,
    0.0000008880,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.3503184562,
    -0.9366306525,
    -0.0000008880,
    -0.0380023722,
    0.7027801558,
    0.0000006509,
    -0.9382188310,
    -1.0679062637,
    -0.0000009208,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.9762212031,
    0.3651261079,
    0.0000002699,
    0.8251633666,
    1.0164658738,
    -0.0000395779,
    0.0380023721,
    -0.7027801552,
    0.0000286922,
    -0.8631657387,
    -0.3136857186,
    0.0000108857,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.8710959025,
    -0.4550382470,
    0.9227364964,
    -0.0181444829,
    0.3355468016,
    -0.6184037915,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    -0.8529514196,
    0.1194914454,
    -0.3043327049,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.8710997622,
    -0.4551102486,
    -0.9226973463,
    -0.0181470691,
    0.3355950550,
    0.6183775308,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    -0.8529526931,
    0.1195151936,
    0.3043198155,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0605180559,
    -1.1191643373,
    -0.8297518682,
    -0.0136825993,
    0.2530336329,
    1.4507337555,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    -0.0468353818,
    0.8661296968,
    0.4713374292,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    -0.0000000749,
    0.0000010076,
    -1.0923193164,
    -0.0605155392,
    1.1191172225,
    -0.8298394512,
    0.0136822035,
    -0.2530253119,
    1.4507535579,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.0468334106,
    -0.8660929182,
    0.4714052098,
    -0.0000000749,
    0.0000010076,
    -1.0923193164,
    -2.1071998375,
    0.6422844466,
    -0.0000271200,
    0.0000000000,
    0.0000000000,
    0.0000000000,
    0.8631657387,
    0.3136857185,
    -0.0000127766,
    0.6220183952,
    -0.4779861168,
    0.0000199483,
    0.6220157036,
    -0.4779840484,
    0.0000199482,
    0.0000000000,
    0.0000000000,
    0.0000000000,
]
B_ref_INTDER = np.array(B_ref_INTDER)
B_ref_INTDER = B_ref_INTDER.reshape((12, 18))
B_ref_INTDER[5:] *= 0.529177210903


def test_compute_B():
    errors = []
    s_vec = SVectors(suite.ZMAT, suite.options, suite.ZMAT.variable_dictionary_init)
    s_vec.run(suite.ZMAT.cartesians_init, True)

    assert np.allclose(s_vec.B, B_ref_INTDER, rtol=0.0, atol=1e-8)
